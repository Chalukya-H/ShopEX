{"ast":null,"code":"import _defineProperty from\"D:\\\\Jan2020_Devlopment\\\\Main projects\\\\ShopEx\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"D:\\\\Jan2020_Devlopment\\\\Main projects\\\\ShopEx\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\Jan2020_Devlopment\\\\Main projects\\\\ShopEx\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\Jan2020_Devlopment\\\\Main projects\\\\ShopEx\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\Jan2020_Devlopment\\\\Main projects\\\\ShopEx\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{getCategories}from'../../actions/categoryAction';import CategoryAdd from'./categoryAdd';import CategoryModify from'./catogoryModify';var CategoryUpdate=/*#__PURE__*/function(_React$Component){_inherits(CategoryUpdate,_React$Component);var _super=_createSuper(CategoryUpdate);function CategoryUpdate(){var _this;_classCallCheck(this,CategoryUpdate);_this=_super.call(this);_this.componentDidMount=function(){_this.props.dispatch(getCategories());var refersh=setInterval(function(){if(_this.props.categories.length){clearInterval(refersh);}},1000);};_this.handleChange=function(e){_this.setState(_defineProperty({},e.target.name,e.target.value));};_this.state={categoryType:''};return _this;}_createClass(CategoryUpdate,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"h3\",null,\" Add / Update Category \"),/*#__PURE__*/React.createElement(\"form\",{className:\"px-4 py-3\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"h4\",{className:\"mt-3\"},\"Select Category Type\"),/*#__PURE__*/React.createElement(\"div\",{className:\"row ml-2\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form-check form-check-inline\"},/*#__PURE__*/React.createElement(\"input\",{className:\"form-check-input\",type:\"radio\",name:\"categoryType\",id:\"Existing\",value:\"Existing\",onChange:this.handleChange,checked:this.state.categoryType==='Existing'?true:false}),/*#__PURE__*/React.createElement(\"label\",{className:\"form-check-label\",htmlFor:\"Existing\"},\"Existing Category\")),/*#__PURE__*/React.createElement(\"div\",{className:\"form-check form-check-inline\"},/*#__PURE__*/React.createElement(\"input\",{className:\"form-check-input\",type:\"radio\",name:\"categoryType\",id:\"categoryNew\",value:\"New\",onChange:this.handleChange,checked:this.state.categoryType==='New'?true:false}),/*#__PURE__*/React.createElement(\"label\",{className:\"form-check-label\",htmlFor:\"categoryNew\"},\"New Category\"))),this.state.categoryType==='Existing'?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(CategoryModify,null)):/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(CategoryAdd,null)))));}}]);return CategoryUpdate;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{categories:state.categories};};export default connect(mapStateToProps)(CategoryUpdate);","map":{"version":3,"sources":["D:/Jan2020_Devlopment/Main projects/ShopEx/client/src/components/categories/categoriesUpdate.js"],"names":["React","connect","getCategories","CategoryAdd","CategoryModify","CategoryUpdate","componentDidMount","props","dispatch","refersh","setInterval","categories","length","clearInterval","handleChange","e","setState","target","name","value","state","categoryType","Component","mapStateToProps"],"mappings":"u2BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,OAAR,KAAsB,aAAtB,CACA,OAAQC,aAAR,KAA4B,8BAA5B,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,C,GAEMC,CAAAA,c,4HAEF,yBAAa,gDACT,wBADS,MAObC,iBAPa,CAOO,UAAI,CACpB,MAAKC,KAAL,CAAWC,QAAX,CAAoBN,aAAa,EAAjC,EAEA,GAAMO,CAAAA,OAAO,CAAIC,WAAW,CAAE,UAAK,CAC/B,GAAG,MAAKH,KAAL,CAAWI,UAAX,CAAsBC,MAAzB,CAAkC,CAC9BC,aAAa,CAACJ,OAAD,CAAb,CACH,CACJ,CAJ2B,CAI1B,IAJ0B,CAA5B,CAKH,CAfY,OAiBbK,YAjBa,CAiBC,SAACC,CAAD,CAAM,CAChB,MAAKC,QAAL,oBACKD,CAAC,CAACE,MAAF,CAASC,IADd,CACsBH,CAAC,CAACE,MAAF,CAASE,KAD/B,GAGH,CArBY,CAET,MAAKC,KAAL,CAAa,CACTC,YAAY,CAAE,EADL,CAAb,CAFS,aAKZ,C,kEAiBO,CACJ,mBACI,2BAAK,SAAS,CAAE,WAAhB,eACI,wDADJ,cAEI,4BAAM,SAAS,CAAE,WAAjB,eACI,2BAAK,SAAS,CAAC,YAAf,eACI,0BAAI,SAAS,CAAE,MAAf,yBADJ,cAEI,2BAAK,SAAS,CAAE,UAAhB,eACI,2BAAK,SAAS,CAAC,8BAAf,eACI,6BAAO,SAAS,CAAC,kBAAjB,CAAoC,IAAI,CAAC,OAAzC,CAAiD,IAAI,CAAC,cAAtD,CACI,EAAE,CAAC,UADP,CACkB,KAAK,CAAC,UADxB,CACoC,QAAQ,CAAG,KAAKP,YADpD,CAEI,OAAO,CAAI,KAAKM,KAAL,CAAWC,YAAX,GAA2B,UAA3B,CAAwC,IAAxC,CAA+C,KAF9D,EADJ,cAII,6BAAO,SAAS,CAAC,kBAAjB,CAAoC,OAAO,CAAC,UAA5C,sBAJJ,CADJ,cAOI,2BAAK,SAAS,CAAC,8BAAf,eACI,6BAAO,SAAS,CAAC,kBAAjB,CAAoC,IAAI,CAAC,OAAzC,CAAiD,IAAI,CAAC,cAAtD,CACI,EAAE,CAAC,aADP,CACqB,KAAK,CAAC,KAD3B,CACkC,QAAQ,CAAG,KAAKP,YADlD,CAEI,OAAO,CAAI,KAAKM,KAAL,CAAWC,YAAX,GAA2B,KAA3B,CAAmC,IAAnC,CAA0C,KAFzD,EADJ,cAII,6BAAO,SAAS,CAAC,kBAAjB,CAAoC,OAAO,CAAC,aAA5C,iBAJJ,CAPJ,CAFJ,CAiBQ,KAAKD,KAAL,CAAWC,YAAX,GAA4B,UAA5B,cACI,4CACI,oBAAC,cAAD,MADJ,CADJ,cAIE,4CACE,oBAAC,WAAD,MADF,CArBV,CADJ,CAFJ,CADJ,CAiCH,C,4BA1DwBrB,KAAK,CAACsB,S,EA+DnC,GAAMC,CAAAA,eAAe,CAAE,QAAjBA,CAAAA,eAAiB,CAACH,KAAD,CAAU,CAC7B,MAAO,CACHT,UAAU,CAAES,KAAK,CAACT,UADf,CAAP,CAGH,CAJD,CAMA,cAAeV,CAAAA,OAAO,CAACsB,eAAD,CAAP,CAAyBlB,cAAzB,CAAf","sourcesContent":["import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {getCategories} from '../../actions/categoryAction'\r\nimport CategoryAdd from './categoryAdd'\r\nimport CategoryModify from './catogoryModify'\r\n\r\nclass CategoryUpdate extends React.Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            categoryType :''\r\n        }\r\n    }\r\n    \r\n    componentDidMount = ()=>{\r\n        this.props.dispatch(getCategories()) \r\n\r\n        const refersh =  setInterval( () =>{ \r\n            if(this.props.categories.length ) {             \r\n                clearInterval(refersh)             \r\n            }\r\n        },1000)\r\n    }\r\n\r\n    handleChange =(e)=> {\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div className ='container'>\r\n                <h3> Add / Update Category </h3>\r\n                <form className ='px-4 py-3'>\r\n                    <div className=\"form-group\">\r\n                        <h4 className ='mt-3'>Select Category Type</h4>\r\n                        <div className ='row ml-2'>                    \r\n                            <div className=\"form-check form-check-inline\">\r\n                                <input className=\"form-check-input\" type=\"radio\" name=\"categoryType\" \r\n                                    id=\"Existing\" value=\"Existing\"  onChange ={this.handleChange}\r\n                                    checked = {this.state.categoryType ==='Existing' ? true : false} />\r\n                                <label className=\"form-check-label\" htmlFor=\"Existing\">Existing Category</label>\r\n                            </div>\r\n                            <div className=\"form-check form-check-inline\">\r\n                                <input className=\"form-check-input\" type=\"radio\" name=\"categoryType\" \r\n                                    id=\"categoryNew\" value=\"New\"  onChange ={this.handleChange} \r\n                                    checked = {this.state.categoryType ==='New' ? true : false} />\r\n                                <label className=\"form-check-label\" htmlFor=\"categoryNew\">New Category</label>\r\n                            </div>\r\n                        </div>\r\n                        {\r\n                            this.state.categoryType === 'Existing' ? \r\n                                <div>\r\n                                    <CategoryModify/>                                   \r\n                                </div>\r\n                            : <div>\r\n                                <CategoryAdd/>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps =(state) =>{\r\n    return {\r\n        categories :state.categories\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CategoryUpdate)"]},"metadata":{},"sourceType":"module"}