{"ast":null,"code":"import axios from 'axios';\nexport const addCartInfo = cart => {\n  return {\n    type: 'CREATE_CART',\n    payload: cart\n  };\n};\nexport const addProducttoCart = (formdata, redirect) => {\n  return dispatch => {\n    const product = {\n      productQuantity: -1,\n      cartQuantity: 1,\n      currentQuantity: 1,\n      id: formdata.productID\n    };\n    axios.put('products/quantity/update', product).then(response => {\n      if (response.data.hasOwnProperty('message')) {\n        alert(response.data.message);\n      } else if (response.data.hasOwnProperty('error')) {\n        alert(response.data.error);\n      } else {\n        axios.post('/cart', formdata, {\n          headers: {\n            'auth': localStorage.getItem('token')\n          }\n        }).then(response => {\n          dispatch(addCartInfo(response.data));\n          redirect();\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const getProducttoCart = () => {\n  return dispatch => {\n    axios.get('/cart', {\n      headers: {\n        'auth': localStorage.getItem('token')\n      }\n    }).then(response => {\n      dispatch(addCartInfo(response.data));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const UpdateCartInfo = cart => {\n  return {\n    type: 'EDIT_CART',\n    payload: cart\n  };\n};\nexport const updateCartQuantity = formData => {\n  return dispatch => {\n    axios.put('products/quantity/update', formData).then(response => {\n      if (response.data.hasOwnProperty('message')) {\n        alert(response.data.message);\n      } else if (response.data.hasOwnProperty('error')) {\n        alert(response.data.error);\n      } else {\n        axios.put('/cart/qunatity/update', formData, {\n          headers: {\n            'auth': localStorage.getItem('token')\n          }\n        }).then(response => {\n          dispatch(UpdateCartInfo(response.data));\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const deleteProducttoCart = id => {\n  return dispatch => {\n    axios.delete(`/cart/${id}`, {\n      headers: {\n        'auth': localStorage.getItem('token')\n      }\n    }).then(response => {\n      dispatch(getProducttoCart());\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};","map":{"version":3,"sources":["D:/Jan2020_Devlopment/Main projects/ShopEx/client/src/actions/cartAction.js"],"names":["axios","addCartInfo","cart","type","payload","addProducttoCart","formdata","redirect","dispatch","product","productQuantity","cartQuantity","currentQuantity","id","productID","put","then","response","data","hasOwnProperty","alert","message","error","post","headers","localStorage","getItem","catch","err","console","log","getProducttoCart","get","UpdateCartInfo","updateCartQuantity","formData","deleteProducttoCart","delete"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\n\r\nexport const addCartInfo = (cart) =>{\r\n    return {type: 'CREATE_CART' ,  payload:cart}\r\n}\r\n\r\nexport const addProducttoCart = (formdata,redirect)=>{\r\n    return(dispatch) => {\r\n         const product = {\r\n            productQuantity : -1,\r\n            cartQuantity : 1,\r\n            currentQuantity : 1,\r\n            id  : formdata.productID\r\n         }\r\n        axios.put('products/quantity/update',product)\r\n        .then( response =>{\r\n            if(response.data.hasOwnProperty('message')) {\r\n                alert(response.data.message)\r\n            } else if(response.data.hasOwnProperty('error') ){\r\n                alert(response.data.error)\r\n            } else { \r\n            \r\n                axios.post('/cart', formdata,{  headers : {\r\n                    'auth' : localStorage.getItem('token') \r\n                    }\r\n                    })\r\n                .then(response => {  \r\n                    dispatch( addCartInfo(response.data) )\r\n                    redirect()\r\n                })\r\n                .catch(err =>{\r\n                    console.log(err)\r\n                })    \r\n            } \r\n        }) \r\n        .catch(err =>{\r\n            console.log(err)\r\n        })      \r\n    }\r\n}\r\n\r\nexport const getProducttoCart = ()=>{\r\n    return(dispatch) => {\r\n         \r\n        axios.get('/cart', {  headers : {\r\n            'auth' : localStorage.getItem('token') \r\n             }\r\n            })\r\n         .then(response => {  \r\n             dispatch( addCartInfo(response.data) )\r\n              \r\n         })\r\n         .catch(err =>{\r\n             console.log(err)\r\n         })         \r\n    }\r\n}\r\n\r\nexport const UpdateCartInfo = (cart) =>{\r\n    return {type: 'EDIT_CART' ,  payload:cart}\r\n}\r\n\r\n\r\nexport const updateCartQuantity = (formData) =>{\r\n    return(dispatch) =>{\r\n      \r\n        axios.put('products/quantity/update',formData)\r\n        .then( response =>{\r\n            if(response.data.hasOwnProperty('message')) {\r\n                alert(response.data.message)\r\n            } else if(response.data.hasOwnProperty('error') ){\r\n                alert(response.data.error)\r\n            } else { \r\n                axios.put('/cart/qunatity/update',formData , {  headers : {\r\n                    'auth' : localStorage.getItem('token') \r\n                     }\r\n                    })\r\n                 .then( response =>{\r\n                     dispatch(UpdateCartInfo(response.data))\r\n                 })   \r\n\r\n                 .catch(err=> {\r\n                     console.log(err)\r\n                 })\r\n            }\r\n        })\r\n\r\n        .catch(err =>{\r\n            console.log(err)\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteProducttoCart = (id)=>{\r\n    \r\n    return(dispatch) => {         \r\n        axios.delete(`/cart/${id}`, {  headers : {\r\n            'auth' : localStorage.getItem('token') \r\n             }\r\n            })\r\n         .then(response => {  \r\n              \r\n            dispatch(getProducttoCart())\r\n              \r\n         })\r\n         .catch(err =>{\r\n             console.log(err)\r\n         })         \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}