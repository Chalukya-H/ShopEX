{"ast":null,"code":"var _jsxFileName = \"D:\\\\Jan2020_Devlopment\\\\Main projects\\\\ShopEx\\\\client\\\\src\\\\components\\\\categories\\\\categoriesUpdate.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getCategories } from '../../actions/categoryAction';\n\nclass CategoryUpdate extends React.Component {\n  constructor() {\n    super();\n\n    this.componentDidMount = () => {\n      this.props.dispatch(getCategories());\n      const refersh = setInterval(() => {\n        if (this.props.categories.length) {\n          clearInterval(refersh);\n        }\n      }, 1000);\n    };\n\n    this.state = {\n      categoryType: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, \" Add / Update Category \"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"px-4 py-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"mt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }, \"Category Type\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-check form-check-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-check-input\",\n      type: \"radio\",\n      name: \"categoryType\",\n      id: \"Existing\",\n      value: \"Existing\",\n      onChange: this.handleChange,\n      checked: this.state.categoryType === 'Existing' ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-check-label\",\n      htmlFor: \"Existing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 29\n      }\n    }, \"Existing Category\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-check form-check-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"form-check-input\",\n      type: \"radio\",\n      name: \"categoryType\",\n      id: \"categoryNew\",\n      value: \"New\",\n      onChange: this.handleChange,\n      checked: this.state.categoryType === 'New' ? true : false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"form-check-label\",\n      htmlFor: \"categoryNew\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    }, \"New Category\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    categories: state.categories\n  };\n};\n\nexport default connect(mapStateToProps)(CategoryUpdate);","map":{"version":3,"sources":["D:/Jan2020_Devlopment/Main projects/ShopEx/client/src/components/categories/categoriesUpdate.js"],"names":["React","connect","getCategories","CategoryUpdate","Component","constructor","componentDidMount","props","dispatch","refersh","setInterval","categories","length","clearInterval","state","categoryType","render","handleChange","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,aAAR,QAA4B,8BAA5B;;AAGA,MAAMC,cAAN,SAA6BH,KAAK,CAACI,SAAnC,CAA6C;AAEzCC,EAAAA,WAAW,GAAE;AACT;;AADS,SAObC,iBAPa,GAOO,MAAI;AACpB,WAAKC,KAAL,CAAWC,QAAX,CAAoBN,aAAa,EAAjC;AAEA,YAAMO,OAAO,GAAIC,WAAW,CAAE,MAAK;AAC/B,YAAG,KAAKH,KAAL,CAAWI,UAAX,CAAsBC,MAAzB,EAAkC;AAC9BC,UAAAA,aAAa,CAACJ,OAAD,CAAb;AACH;AACJ,OAJ2B,EAI1B,IAJ0B,CAA5B;AAKH,KAfY;;AAET,SAAKK,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE;AADL,KAAb;AAGH;;AAYDC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAE,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,eAEI;AAAM,MAAA,SAAS,EAAE,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAI,MAAA,SAAS,EAAE,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,eAEA;AAAK,MAAA,SAAS,EAAE,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,SAAS,EAAC,kBAAjB;AAAoC,MAAA,IAAI,EAAC,OAAzC;AAAiD,MAAA,IAAI,EAAC,cAAtD;AACI,MAAA,EAAE,EAAC,UADP;AACkB,MAAA,KAAK,EAAC,UADxB;AACoC,MAAA,QAAQ,EAAG,KAAKC,YADpD;AAEI,MAAA,OAAO,EAAI,KAAKH,KAAL,CAAWC,YAAX,KAA2B,UAA3B,GAAwC,IAAxC,GAA+C,KAF9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAII;AAAO,MAAA,SAAS,EAAC,kBAAjB;AAAoC,MAAA,OAAO,EAAC,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJJ,CADJ,eAOI;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,SAAS,EAAC,kBAAjB;AAAoC,MAAA,IAAI,EAAC,OAAzC;AAAiD,MAAA,IAAI,EAAC,cAAtD;AACI,MAAA,EAAE,EAAC,aADP;AACqB,MAAA,KAAK,EAAC,KAD3B;AACkC,MAAA,QAAQ,EAAG,KAAKE,YADlD;AAEI,MAAA,OAAO,EAAI,KAAKH,KAAL,CAAWC,YAAX,KAA2B,KAA3B,GAAmC,IAAnC,GAA0C,KAFzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAII;AAAO,MAAA,SAAS,EAAC,kBAAjB;AAAoC,MAAA,OAAO,EAAC,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,CAPJ,CAFA,CADJ,CAFJ,CADJ;AAwBH;;AA5CwC;;AAiD7C,MAAMG,eAAe,GAAGJ,KAAD,IAAU;AAC7B,SAAO;AACHH,IAAAA,UAAU,EAAEG,KAAK,CAACH;AADf,GAAP;AAGH,CAJD;;AAMA,eAAeV,OAAO,CAACiB,eAAD,CAAP,CAAyBf,cAAzB,CAAf","sourcesContent":["import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {getCategories} from '../../actions/categoryAction'\r\n\r\n\r\nclass CategoryUpdate extends React.Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            categoryType :''\r\n        }\r\n    }\r\n    \r\n    componentDidMount = ()=>{\r\n        this.props.dispatch(getCategories()) \r\n\r\n        const refersh =  setInterval( () =>{ \r\n            if(this.props.categories.length ) {             \r\n                clearInterval(refersh)             \r\n            }\r\n        },1000)\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className ='container'>\r\n                <h3> Add / Update Category </h3>\r\n                <form className ='px-4 py-3'>\r\n                    <div className=\"form-group\">\r\n                    <h6 className ='mt-3'>Category Type</h6>\r\n                    <div className ='row ml-2'>                    \r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input className=\"form-check-input\" type=\"radio\" name=\"categoryType\" \r\n                                id=\"Existing\" value=\"Existing\"  onChange ={this.handleChange}\r\n                                checked = {this.state.categoryType ==='Existing' ? true : false} />\r\n                            <label className=\"form-check-label\" htmlFor=\"Existing\">Existing Category</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input className=\"form-check-input\" type=\"radio\" name=\"categoryType\" \r\n                                id=\"categoryNew\" value=\"New\"  onChange ={this.handleChange} \r\n                                checked = {this.state.categoryType ==='New' ? true : false} />\r\n                            <label className=\"form-check-label\" htmlFor=\"categoryNew\">New Category</label>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps =(state) =>{\r\n    return {\r\n        categories :state.categories\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(CategoryUpdate)"]},"metadata":{},"sourceType":"module"}